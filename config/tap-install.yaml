#@ load("@ytt:data", "data")
#@ load("@ytt:yaml", "yaml")
---
apiVersion: v1
kind: Namespace
metadata:
  name: tap-install
---
apiVersion: v1
kind: Secret
metadata:
  name: tap-registry
  namespace: tap-install
type: kubernetes.io/dockerconfigjson
stringData:
  #@yaml/text-templated-strings
  .dockerconfigjson: |
    {
      "auths":{
        "(@= data.values.harbor.hostname @)":{
          "username": "(@= data.values.waas_catalog.harbor.user @)",
          "password": "(@= data.values.waas_catalog.harbor.adminPassword @)"
        }
      }
    }
---
apiVersion: secretgen.carvel.dev/v1alpha1
kind: SecretExport
metadata:
  name: tap-registry
  namespace: tap-install
spec:
  toNamespaces:
  - '*'
---
apiVersion: packaging.carvel.dev/v1alpha1
kind: PackageRepository
metadata:
  finalizers:
  - finalizers.packagerepository.packaging.carvel.dev/delete
  name: tanzu-tap-repository
  namespace: tap-install
spec:
  fetch:
    imgpkgBundle:
      image: harbor.workshop.amer.end2end.link/registry-tanzu/tap-packages:1.5.0
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: tap-package-install-cluster-admin-role
  annotations: 
    kapp.k14s.io/change-group: tap-serviceaccount
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tap-packge-install-cluster-admin-role-binding
  annotations: 
    kapp.k14s.io/change-group: tap-serviceaccount
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tap-package-install-cluster-admin-role
subjects:
- kind: ServiceAccount
  name: tap-package-install-sa
  namespace: tap-install
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tap-package-install-sa
  namespace: tap-install
  annotations: 
    kapp.k14s.io/change-group: tap-serviceaccount
---
apiVersion: packaging.carvel.dev/v1alpha1
kind: PackageInstall
metadata:
  annotations:
    kapp.k14s.io/change-group: tap
    kapp.k14s.io/change-rule.tap-harbor-project-up: "upsert after upserting tap-harbor-project" 
    kapp.k14s.io/change-rule.serviceaccount-up: "upsert after upserting tap-serviceaccount"
    kapp.k14s.io/change-rule.tap-harbor-project-del: "delete before deleting tap-harbor-project"
    kapp.k14s.io/change-rule.serviceaccount-del: "delete before deleting tap-serviceaccount"
    ext.packaging.carvel.dev/ytt-paths-from-secret-name.0: tap-secretimport-overlay
  name: tap-full
  namespace: tap-install
spec:
  packageRef:
    refName: tap.tanzu.vmware.com
    versionSelection:
      constraints: ">=1.5.0 <1.6.0"
      prereleases: {}
  serviceAccountName: tap-package-install-sa
  values:
  - secretRef:
      name: tap-values
---
apiVersion: v1
kind: Secret
metadata:
  name: tap-values
  namespace: tap-install
stringData:
  values.yaml: #@ yaml.encode(data.values.tap)
---
apiVersion: v1
kind: Secret
metadata:
  name: tap-secretimport-overlay
  namespace: tap-install
stringData:
  secret-import.yaml: |
    apiVersion: secretgen.carvel.dev/v1alpha1
    kind: SecretImport
    metadata:
      name: eduk8s-cert-tls
      namespace: learningcenter
    spec:
      fromNamespace: waas-install